// Type definitions for the Msg model (WAWebMsgModel)
// This is a partial typing based on the property initialization in the constructor.
// Type annotations are generic (`any`) unless inferred otherwise.
// Extend/replace `any` with more specific types as needed for your codebase.

import type { IBaseModel } from "./WAWebBaseModel";
import type { MSG_TYPE } from "./WAWebMsgType";
import type { IWAWebWid } from "./WAWebWid";


export interface IWAWebMsgModel extends IBaseModel {
  // Core ID and status
  id: any;
  rowId: any;
  serverId: any;
  viewCount: any;
  viewed: boolean;
  body: any;
  type: MSG_TYPE;
  subtype: any;
  t: any;
  revokeTimestamp: any;
  notifyName: any;
  from: IWAWebWid;
  to: any;
  author: any;
  ack: any;
  invis: any;
  isNewMsg: any;
  star: boolean;
  kicKey: any;
  kicState: any;
  kicTimestampMs: any;
  kicNotified: boolean;
  keepType: any;
  keptMessageKey: any;
  keptCount: any;
  recvFresh: any;
  caption: any;
  interactiveAnnotations: any;
  contextInfo: any;
  clientUrl: any;
  loc: any;
  lat: any;
  lng: any;
  isLive: any;
  accuracy: any;
  speed: any;
  degrees: any;
  comment: any;
  sequence: any;
  shareDuration: any;
  finalLat: any;
  finalLng: any;
  finalAccuracy: any;
  finalThumbnail: any;
  finalSpeed: any;
  finalDegrees: any;
  finalTimeOffset: any;
  deprecatedMms3Url: any;
  directPath: any;
  mimetype: any;
  duration: any;
  filehash: any;
  encFilehash: any;
  size: any;
  filename: any;
  streamingSidecar: any;
  mediaKey: any;
  mediaKeyTimestamp: any;
  pageCount: any;
  isGif: any;
  gifAttribution: any;
  accessibilityLabel: any;
  isViewOnce: any;
  streamable: any;
  width: any;
  height: any;
  thumbnailDirectPath: any;
  thumbnailSha256: any;
  thumbnailEncSha256: any;
  thumbnailHeight: any;
  thumbnailWidth: any;
  waveform: any;
  staticUrl: any;
  stickerPackId: any;
  stickerPackName: any;
  stickerPackPublisher: any;
  stickers: any;
  trayIconFileName: any;
  stickerPackSize: any;
  mediaHandle: any;
  scanLengths: any;
  scansSidecar: any;
  isFromTemplate: boolean;
  devicesAdded: any;
  devicesRemoved: any;
  isThisDeviceAdded: any;
  firstFrameLength: any;
  firstFrameSidecar: any;
  isAnimated: any;
  isLottie: any;
  matchedText: any;
  thumbnail: any;
  thumbnailHQ: any;
  richPreviewType: any;
  doNotPlayInline: any;
  rcat: any;
  title: any;
  description: any;
  paymentLinkMetadata: any;
  businessOwnerJid: any;
  productId: any;
  currencyCode: any;
  priceAmount1000: any;
  salePriceAmount1000: any;
  retailerId: any;
  url: any;
  productImageCount: any;
  sessionId: any;
  pollName: any;
  pollOptions: any;
  pollSelectableOptionsCount: any;
  pollInvalidated: boolean;
  pollContentType: any;
  isSentCagPollCreation: boolean;
  pollUpdateParentKey: any;
  encPollVote: any;
  selectedOptionLocalIds: any;
  pollVotesSnapshot: any;
  senderTimestampMs: any;
  latestEditMsgKey: any;
  latestEditSenderTimestampMs: any;
  editMsgType: any;
  recipients: any;
  broadcast: any;
  quotedMsg: any;
  quotedStanzaID: any;
  quotedRemoteJid: any;
  quotedParticipant: any;
  quotedGroupSubject: any;
  quotedParentGroupJid: any;
  mentionedJidList: any[];
  reporterJidList: any;
  groupMentions: any[];
  footer: any;
  hydratedButtons: any;
  buttons: any;
  hsmTag: any;
  hsmCategory: any;
  templateId: any;
  eventName: any;
  isEventCanceled: boolean;
  eventDescription: any;
  eventJoinLink: any;
  eventStartTime: any;
  eventEndTime: any;
  eventLocation: any;
  eventInvalidated: boolean;
  selectedId: any;
  selectedIndex: any;
  selectedCarouselCardIndex: any;
  multicast: any;
  urlText: any;
  urlNumber: any;
  statusMentioned: any;
  isWamoSub: any;
  clearMedia: any;
  isVcardOverMmsDocument: boolean;
  isCaptionByUser: any;
  vcardList: any;
  vcardFormattedName: any;
  revokeSender: any;
  protocolMessageKey: any;
  futureproofBuffer: any;
  futureproofParams: any;
  futureproofType: any;
  futureproofSubtype: any;
  templateParams: any;
  textColor: any;
  backgroundColor: any;
  font: any;
  cannotBeRanked: any;
  campaignId: any;
  campaignDuration: any;
  actionLink: any;
  statusPSAReadTimestamp: any;
  isForwarded: boolean;
  isQuestion: boolean;
  forwardingScore: any;
  labels: any;
  hasReaction: boolean;
  paymentCurrency: any;
  paymentAmount1000: any;
  paymentMessageReceiverJid: any;
  paymentTransactionTimestamp: any;
  paymentStatus: any;
  paymentTxnStatus: any;
  paymentNoteMsg: any;
  paymentRequestMessageKey: any;
  paymentExpiryTimestamp: any;
  paymentInviteServiceType: any;
  ephemeralDuration: any;
  ephemeralSettingTimestamp: any;
  ephemeralOutOfSync: any;
  ephemeralSharedSecret: any;
  disappearingModeInitiator: any;
  ephemeralSettingUser: any;
  disappearingModeTrigger: any;
  disappearingModeInitiatedByMe: any;
  parentMsgKey: any;
  associationType: any;
  viewMode: any;
  messageSecret: any;
  originalSelfAuthor: any;
  bizPrivacyStatus: any;
  privacyModeWhenSent: any;
  verifiedBizName: any;
  inviteCode: any;
  inviteCodeExp: any;
  inviteGrp: any;
  inviteGrpName: any;
  inviteGrpJpegThum: any;
  inviteGrpType: any;
  sellerJid: any;
  message: any;
  orderTitle: any;
  itemCount: any;
  orderId: any;
  surface: any;
  status: any;
  token: any;
  totalAmount1000: any;
  totalCurrencyCode: any;
  catalogType: any;
  historySyncMetaData: any;
  isSendFailure: any;
  errorCode: any;
  appStateSyncKeyShare: any;
  appStateSyncKeyRequest: any;
  appStateFatalExceptionNotification: any;
  peerDataOperationRequestMessage: any;
  peerDataOperationRequestResponseMessage: any;
  broadcastParticipants: any;
  broadcastEphSettings: any;
  broadcastId: any;
  smbClientCampaignId: any;
  ctwaContext: any;
  utm: any;
  list: any;
  listResponse: any;
  productListItemCount: any;
  productHeaderImageRejected: boolean;
  agentId: any;
  lastPlaybackProgress: number;
  local: boolean;
  search: any;
  msgChunk: any;
  startOfDay: any;
  startOfDaySkew: any;
  quotedMsgKey: any;
  isQuotedMsgAvailable: boolean;
  fromQuotedMsg: boolean;
  senderObj: any;
  mediaData: any;
  forwardedFromWeb: boolean;
  nonce: any;
  squelch: any;
  wamMessageSendReporter: any;
  wamMessageSendPerfReporter: any;
  pendingDeleteForMe: boolean;
  isDynamicReplyButtonsMsg: boolean;
  dynamicReplyButtons: any;
  replyButtons: any;
  buttonsResponse: any;
  selectedButtonId: any;
  headerType: any;
  nativeFlowName: any;
  nativeFlowButtons: any;
  interactiveHeader: any;
  interactiveType: any;
  interactivePayload: any;
  nativeFlowInteractiveMsg: any;
  carouselCardsParsed: any;
  carouselCards: any;
  isCarouselCard: boolean;
  parentMsgId: any;
  callSilenceReason: any;
  callOutcome: any;
  isVideoCall: boolean;
  callDuration: any;
  callCreator: any;
  callParticipants: any;
  isCallLink: any;
  callLinkToken: any;
  reactionParentKey: any;
  reactionText: any;
  reactionTimestamp: any;
  targetMessageKey: any;
  encIv: any;
  encPayload: any;
  replyCount: any;
  pinParentKey: any;
  pinMessageType: any;
  pinSenderTimestampMs: any;
  pinExpiryDuration: any;
  revokeDuration: any;
  isMdHistoryMsg: boolean;
  stickerSentTs: number;
  isAvatar: boolean;
  bizSource: any;
  pmCampaignId: any;
  lastUpdateFromServerTs: number;
  botEditType: any;
  invokedBotWid: any;
  botMessageSecret: any;
  botFeedbackKind: any;
  botFeedbackText: any;
  botTargetSenderJid: any;
  bizBotType: any;
  botPersonaId: any;
  activeBotMsgStreamingInProgress: boolean;
  botEditTimeoutID: any;
  lastBotEditBodyLength: any;
  botEditTargetId: any;
  botRespOrInvocationRevokeBotWid: any;
  botResponseTargetId: any;
  botPluginType: any;
  botPluginReferenceIndex: any;
  botPluginSearchProvider: any;
  botPluginSearchUrl: any;
  botPluginSearchQuery: any;
  botPluginMaybeParent: boolean;
  botReelPluginThumbnailCdnUrl: any;
  botMessageDisclaimerText: any;
  botMsgBodyType: any;
  isSupportAIMessage: any;
  supportCitations: any;
  richResponse: any;
  forwardedNewsletterMessageInfo: any;
  encryptedData: any;
  newsletterAdminInviteInfo: any;
  reportingTokenInfo: any;
  reportingTokenContent: any;
  plainProtobufBytes: any;
  preMatChat: any;
  senderWithDevice: any;
  isRetry: boolean;
  isOffline: boolean;
  musicArtwork: any;

  // Raw links/phones (arrays)
  $MsgImpl$p_1: any[];
  $MsgImpl$p_2: any[];
  $MsgImpl$p_3: any[];
  $MsgImpl$p_4: any;
  $MsgImpl$p_5: any[];
  $MsgImpl$p_6: any[];
  $MsgImpl$p_7: any[];
  $MsgImpl$p_8: any;

  // Methods (main public/protected instance methods)
  pendingAckUpdate_TESTONLY(): any;
  initialize(): void;
  hideParentMessageInChat(a: any): void;
  _triggerNotificationForParentMessage(): void;
  getRawLinks(): any[];
  setRawLinks(a: any[]): void;
  clearRawLinks(): void;
  getRawPollOptionsToLinks(): any;
  setRawPollOptionsToLinks(a: any): void;
  getRawHeaderLinks(): any[];
  setRawHeaderLinks(a: any[]): void;
  getRawFooterLinks(): any[];
  setRawFooterLinks(a: any[]): void;
  getRawPhoneNumbers(): any[];
  setRawPhoneNumbers(a: any[]): void;
  clearRawPhoneNumbers(): void;
  getRawHeaderPhoneNumbers(): any[];
  setRawHeaderPhoneNumbers(a: any[]): void;
  getRawFooterPhoneNumbers(): any[];
  setRawFooterPhoneNumbers(a: any[]): void;
  mayFail(): boolean;
  isUnsentPhoneMsg(): boolean;
  supportsStarWithKeepInChat(): boolean;
  interactiveButtonsReleased(): boolean;
  getVcardWids(): any[] | null;
  getMultiVcardWids(): any[] | null;
  getLocObject(): { name: string; addr: string | null } | null;
  resumeRemoteUpload(): any;
  forceRMR(): Promise<never>;
  isForcingRMR(): boolean;
  cancelDownload(): void;
  resumeUpload(): Promise<any>;
  cancelUpload(): void;
  waitForPhoneUpload(): Promise<void>;
  forceDownloadMediaEvenIfExpensive(): any;
  downloadMedia(a: any): any;
  applyUpdate(a: any): any;
  waitForPrep(): Promise<any>;
  alterChatFields(a: any): void;
  delete(b?: any): void;
  isLastMessage(): boolean;
  msgContextInfo(a: any): any;
  displayName(a?: any): string;
  isMentioned(a: any): boolean;
  mentionMap(): { [key: string]: any } | null;
  groupMentionMap(): { [key: string]: any } | null;
  updateAck(a: any, b?: boolean): void;
  updateErrorCode(a: any): any;
  updateGalaxyFlowMsgLoggingIds(a: any, b: any): any;
  updateLastPlaybackProgress(a: number): void;
  avParams(): any;
  resend(): Promise<any>;
  isReaction(): boolean;
  isEditProtocolMsg(): boolean;
  getWamDisappearingModeInitiator(): any;
  getWamMessageType(): any;
  getWamMediaType(): any;
  getWamEditType(): any;
  getForwardingScoreWhenForwarded(): any;
  isExpired(): boolean;
  isRealMessage(): boolean;
  isExpiredAndNotKept(): boolean;
  timeUntilExpiration(): number | null;
  getCollection(): any;
  safe(): this;
  unsafe(): this;
  keepIsLockedForMe(): boolean;
  keepIsLockedForUser(a: any): boolean;
  keepIsLockedForMeSenderSuperpower(): boolean;
  keepIsLockedByDmSettingsForUser(a: any): boolean;
  canShowKeepOrUnkeepOption(): boolean;
  canShowKeepOption(): boolean;
  canShowUnkeepOption(): boolean;
  canRevokeUnkeep(): boolean;
  isPastUnkeepExpirationLimit(): boolean;
  shouldShowNotificationPreview(): boolean;
  senderIsGroupParticipant(): boolean;
  detachAssociatedMsg(): void;
}

export type WAWebMsgModelConstructor = new (...args: any[]) => IWAWebMsgModel;